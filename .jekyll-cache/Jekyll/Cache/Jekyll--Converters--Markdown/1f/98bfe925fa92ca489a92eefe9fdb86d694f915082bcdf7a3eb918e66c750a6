I""<<p>Converting a web page into PDF becomes very difficult when you want to preserve CSS of your page. There are two ways of performing this task.</p>

<ol>
  <li>Client Side</li>
  <li>Server Side</li>
</ol>

<p>The solutions which work on client side are JavaScript libraries like jsPDF but they do not impress the user. The server side solutions are mostly APIs but most of them are not free. There is one solution for this problem which is Apache FOP. Apache FOP is actually a free tool which work on server side which convert HTML/XML into PDF and provides lot of formatting for PDF . In this article, I will show you how to create PDF using FOP.</p>

<!--more-->

<h2 id="what-is-apache-fop">What is Apache FOP?</h2>

<p>Formatting Objects Processor abbreviated as FOP is a Java application that changes over XSL Formatting Objects (XSL-FO) documents to PDF or other printable arrangements. Its latest available version is 1.1.</p>

<h2 id="running-fop">Running FOP</h2>

<p>Download FOP from following <a href="https://xmlgraphics.apache.org/fop/download.html">link</a>.</p>

<p>Extract fop in some folder. You can run fop by running following command</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./path_to_fop_directory/fop
</code></pre></div></div>

<p>When you have successfully run fop, download following rar file from <a href="https://drive.google.com/file/d/0ByZCIms9QOkgUUp0YkNQS0N1WFU/view">link</a>.There are two files and an image folder in rar file. I am writing them in list below.</p>

<p>⋅⋅* Index.html
⋅⋅* Index.xsl</p>

<p>The index.html is the HTML page which will be converted into PDF. Index.xsl is the style sheet for this HTML page. Enter in directory in which you have downloaded these two file through command line and run following command.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./fop –xml index.html –xsl index.xsl –pdf index.pdf
</code></pre></div></div>

<p>In this command, you are running FOP and giving it two arguments which are xml file (index.html) and xsl file (index.xsl) and telling it that convert HTML file into PDF (index.pdf). Your output will be like this with no footers and headers.</p>

<p><img src="/images/2018/1/im.png" alt="Output 1" /></p>

<p>Now open xsl file and start understanding it. Every section there have comments telling its purpose but I will explain some sections.</p>

<h2 id="header-and-footer-section">Header and Footer Section</h2>

<p>Look at the section below in xsl file. This section is for setting header and footer of your PDF. Now edit xsl as shown in below section.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;fo:static-content</span> <span class="na">flow-name=</span><span class="s">"rb-page"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;fo:block</span> <span class="na">font-size=</span><span class="s">"10pt"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;fo:table</span> <span class="na">table-layout=</span><span class="s">"fixed"</span> <span class="na">inline-progression-dimension=</span><span class="s">"100%"</span><span class="nt">&gt;</span>
              <span class="nt">&lt;fo:table-column</span> <span class="na">column-width=</span><span class="s">"50%"</span><span class="nt">/&gt;</span>
              <span class="nt">&lt;fo:table-column</span> <span class="na">column-width=</span><span class="s">"50%"</span><span class="nt">/&gt;</span>
              <span class="nt">&lt;fo:table-body&gt;</span>
                <span class="nt">&lt;fo:table-row&gt;</span>
                  <span class="nt">&lt;fo:table-cell&gt;</span>
                    <span class="nt">&lt;fo:block</span> <span class="na">text-align=</span><span class="s">"start"</span><span class="nt">&gt;</span>
                          Test Pdf file Generated by FOP
                    fo:block&gt;
                  fo:table-cell&gt;
                  <span class="nt">&lt;fo:table-cell&gt;</span>
                    <span class="nt">&lt;fo:block</span> <span class="na">text-align=</span><span class="s">"end"</span> <span class="na">font-weight=</span><span class="s">"bold"</span>
                      <span class="na">font-family=</span><span class="s">"monospace"</span><span class="nt">&gt;</span>
                          M Hassan Siddiqui
                    fo:block&gt;
                  fo:table-cell&gt;
                fo:table-row&gt;
              fo:table-body&gt;
            fo:table&gt;
          fo:block&gt;
        fo:static-content&gt;
        <span class="nt">&lt;fo:static-content</span> <span class="na">flow-name=</span><span class="s">"ra-page"</span><span class="nt">&gt;</span>
          <span class="nt">&lt;fo:block</span> <span class="na">font-size=</span><span class="s">"10pt"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;fo:table</span> <span class="na">table-layout=</span><span class="s">"fixed"</span> <span class="na">inline-progression-dimension=</span><span class="s">"100%"</span><span class="nt">&gt;</span>
              <span class="nt">&lt;fo:table-column</span> <span class="na">column-width=</span><span class="s">"50%"</span><span class="nt">/&gt;</span>
              <span class="nt">&lt;fo:table-column</span> <span class="na">column-width=</span><span class="s">"50%"</span><span class="nt">/&gt;</span>
              <span class="nt">&lt;fo:table-body&gt;</span>
                <span class="nt">&lt;fo:table-row&gt;</span>
                  <span class="nt">&lt;fo:table-cell&gt;</span>
                    <span class="nt">&lt;fo:block</span> <span class="na">text-align=</span><span class="s">"start"</span><span class="nt">&gt;</span>
                            Footer Text
                    fo:block&gt;
                  fo:table-cell&gt;
                  <span class="nt">&lt;fo:table-cell&gt;</span>
                    <span class="nt">&lt;fo:block</span> <span class="na">text-align=</span><span class="s">"end"</span><span class="nt">&gt;</span>Page
                       of

                    fo:block&gt;
                  fo:table-cell&gt;
                fo:table-row&gt;
              fo:table-body&gt;
            fo:table&gt;
          fo:block&gt;
 fo:static-content&gt;
</code></pre></div></div>

<p>Now run the above command to generate PDF and you will see following header and footer in PDF. If your PDF file is open while running this command, it will give error in Windows but will work fine in Ubuntu. In Windows, close that file and run command.</p>

<h3 id="header">Header</h3>

<p><img src="/images/2018/1/im2.png" alt="Header" /></p>

<h3 id="footer">Footer</h3>

<p><img src="/images/2018/1/im3.png" alt="Footer" /></p>

<p>You can also choose an image as footer or header. Put following line in place of ‘Footer Text’.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;fo:external-graphic</span> <span class="na">width=</span><span class="s">"200pt"</span> <span class="na">height=</span><span class="s">"200pt"</span> <span class="na">content-width=</span><span class="s">"150pt"</span> <span class="na">content-height=</span><span class="s">"150pt"</span> <span class="na">src=</span><span class="s">"images/fop.jpg"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<p><img src="/content/images/2018/1/im4.png" alt="Header" /></p>

<h2 id="styling-for-a-specific-element">Styling for a specific element</h2>

<p>In xsl file, there are defined behavior for all tags which will we used in your HTML. For example, following section is defining tag.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;xsl:template</span> <span class="na">match=</span><span class="s">"b"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;fo:block</span> <span class="na">font-weight=</span><span class="s">"bold"</span> <span class="nt">&gt;</span>
      <span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;xsl:choose&gt;</span>
          <span class="nt">&lt;xsl:when</span> <span class="na">test=</span><span class="s">"@id"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">"@id"</span><span class="nt">/&gt;</span>
          xsl:when&gt;
          <span class="nt">&lt;xsl:otherwise&gt;</span>
            <span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">"generate-id()"</span><span class="nt">/&gt;</span>
          xsl:otherwise&gt;
        xsl:choose&gt;
      xsl:attribute&gt;
      <span class="nt">&lt;xsl:apply-templates</span> <span class="na">select=</span><span class="s">"*|text()"</span><span class="nt">/&gt;</span>
    fo:block&gt;
  xsl:template&gt;
</code></pre></div></div>

<p>If you want to give it some other style like color, you have to include following line</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;xsl:template</span> <span class="na">match=</span><span class="s">"b"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;fo:block</span> <span class="na">font-weight=</span><span class="s">"bold"</span> <span class="na">xsl:use-attribute-sets=</span><span class="s">"boldTextStyles"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;xsl:choose&gt;</span>
          <span class="nt">&lt;xsl:when</span> <span class="na">test=</span><span class="s">"@id"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">"@id"</span><span class="nt">/&gt;</span>
          xsl:when&gt;
          <span class="nt">&lt;xsl:otherwise&gt;</span>
            <span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">"generate-id()"</span><span class="nt">/&gt;</span>
          xsl:otherwise&gt;
        xsl:choose&gt;
      xsl:attribute&gt;
      <span class="nt">&lt;xsl:apply-templates</span> <span class="na">select=</span><span class="s">"*|text()"</span><span class="nt">/&gt;</span>
    fo:block&gt;
xsl:template&gt;
</code></pre></div></div>

<p>boldTextStyle is like name of id you give to some div. Now write this line at bottom of file but before ‘’.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;xsl:attribute-set</span> <span class="na">name=</span><span class="s">"boldTextStyles"</span><span class="nt">&gt;</span>
             <span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">"color"</span><span class="nt">&gt;</span>#FF0000xsl:attribute&gt;
xsl:attribute-set&gt;
</code></pre></div></div>

<p>Now when you will generate PDF, you will see color of bold text will be red.</p>

<p>FOP actually convert xml into PDF.  XML and HTML are same but in HTML, same types of elements are differentiated with each other with the help of their ids. For example if you have two types of bold texts with red and green color, you just give each tag an id and in css, you give them their required color. But when this file will be converted into PDF, fop will give same style to every tag when fop will find a tag in web page, it will find its definition in xsl file and will do whatever that definition says with that section. If you want two bold section having different color, then you just have to write different tags for each section. Like if one type of bold text is red and other is green, you define another tag in xsl like defined in below section and give it style as required. Copy that code before ‘’ and generate PDF. This section is defining another tag having definition same as for but will have different style</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;xsl:template</span> <span class="na">match=</span><span class="s">"bold_green"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;fo:block</span> <span class="na">font-weight=</span><span class="s">"bold"</span> <span class="na">xsl:use-attribute-sets=</span><span class="s">"boldGreenTextStyles"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">"id"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;xsl:choose&gt;</span>
          <span class="nt">&lt;xsl:when</span> <span class="na">test=</span><span class="s">"@id"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">"@id"</span><span class="nt">/&gt;</span>
          xsl:when&gt;
          <span class="nt">&lt;xsl:otherwise&gt;</span>
            <span class="nt">&lt;xsl:value-of</span> <span class="na">select=</span><span class="s">"generate-id()"</span><span class="nt">/&gt;</span>
          xsl:otherwise&gt;
        xsl:choose&gt;
      xsl:attribute&gt;
      <span class="nt">&lt;xsl:apply-templates</span> <span class="na">select=</span><span class="s">"*|text()"</span><span class="nt">/&gt;</span>
    fo:block&gt;
  xsl:template&gt;


<span class="c">&lt;!-- ============================================
    Styling for boldGreenTextStyles
    =============================================== --&gt;</span>


<span class="nt">&lt;xsl:attribute-set</span> <span class="na">name=</span><span class="s">" boldGreenTextStyles "</span><span class="nt">&gt;</span>
             <span class="nt">&lt;xsl:attribute</span> <span class="na">name=</span><span class="s">"color"</span><span class="nt">&gt;</span>#00FF00xsl:attribute&gt;
xsl:attribute-set&gt;
</code></pre></div></div>

<p>Add this line in index.html</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;bold_green&gt;</span> This is bold green text <span class="nt">&lt;/bold_green&gt;</span>
</code></pre></div></div>

<p>Now output PDF will be like this</p>

<p><img src="/images/2018/1/im5.png" alt="Output 5" /></p>

<h2 id="conclusion">Conclusion</h2>

<p>To use fop and get PDF according to demand, you first have to convert your HTML code into xml which will be used with xsl to generate PDF. You will have to translate all the css into xsl to get exact PDF as you web page look like. When you write an HTML page, if you miss close tags like <code class="highlighter-rouge">&lt;/b&gt;</code> or <code class="highlighter-rouge">&lt;/p&gt;</code> etc., browser just ignore them and show you the output. That is not the case when you are generating PDF from fop. Fop will give an error when it does not find a closing tag of a tag. Even when you write <code class="highlighter-rouge">&lt;br&gt;</code> instead of <code class="highlighter-rouge">&lt;br/&gt;</code>, it will give error. So you have to write code very carefully to perform your task.</p>
:ET